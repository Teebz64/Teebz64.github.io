{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/seo.js"],"names":["NotFoundPage","Fragment","title","className","heading","text","hasBackButton","to","Seo","description","image","lang","meta","site","useStaticQuery","metaDescription","siteMetadata","metaImage","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"0FAAA,qDAgCeA,UA3BM,kBACjB,kBAAC,IAAMC,SAAP,KACI,kBAAC,IAAD,CAAKC,MAAM,mBACX,6BAASC,UAAU,wCACf,kBAAC,IAAD,CACIC,QACI,kBAAC,IAAMH,SAAP,KACG,0BAAME,UAAU,gBAAhB,gBAGPE,KACI,kBAAC,IAAMJ,SAAP,KACI,yBAAKE,UAAU,yDAAf,sBAGRG,eAAe,KAGvB,6BAASH,UAAU,WACf,yBAAKA,UAAU,QACX,wBAAIA,UAAU,iBAAd,kBACA,uBAAGA,UAAU,cAAb,cAAqC,kBAAC,OAAD,CAAMI,GAAG,KAAT,W,iCC1BrD,8CAYA,SAASC,EAAT,GAAyD,IAA1CC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMV,EAAS,EAATA,MACrCW,EAASC,yBAAe,YAAxBD,KAeFE,EAAkBN,GAAeI,EAAKG,aAAaP,YACnDQ,EAAYP,GAASG,EAAKG,aAAaN,MAE7C,OACE,kBAAC,IAAD,CACEQ,eAAgB,CACdP,QAEFT,MAAOA,EACPiB,cAAa,QAAUN,EAAKG,aAAad,MACzCU,KAAM,CACJ,CACEQ,KAAK,cACLC,QAASN,GAEX,CACEO,SAAS,WACTD,QAASnB,GAEX,CACEoB,SAAS,QACTD,QAASJ,GAEX,CACEK,SAAS,WACTD,QAASJ,GAEX,CACEK,SAAS,gBACTD,QAASJ,GAEX,CACEK,SAAS,iBACTD,QAASN,GAEX,CACEO,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASR,EAAKG,aAAaO,QAE7B,CACEH,KAAK,gBACLC,QAASnB,GAEX,CACEkB,KAAK,sBACLC,QAASN,IAEXS,OAAOZ,KAKfJ,EAAIiB,aAAe,CACjBd,KAAK,KACLC,KAAM,GACNH,YAAY,IAUCD","file":"component---src-pages-404-js-787d3877d61f135fb86d.js","sourcesContent":["import React from \"react\"\r\nimport Masthead from '../components/Masthead'\r\nimport SEO from \"../components/seo\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst NotFoundPage = () => (\r\n    <React.Fragment>\r\n        <SEO title=\"Page not found\" />\r\n        <section className=\"section section--hero section--index\">\r\n            <Masthead\r\n                heading={\r\n                    <React.Fragment>\r\n                       <span className=\"hover-cursor\">Steven Dana</span>\r\n                    </React.Fragment>\r\n                }\r\n                text={\r\n                    <React.Fragment>\r\n                        <div className=\"masthead__textline masthead__textline--large -fade-in\">Selected Projects</div>\r\n                    </React.Fragment>\r\n                }\r\n                hasBackButton={false}\r\n            />\r\n        </section>\r\n        <section className=\"section\">\r\n            <div className=\"deck\">\r\n                <h2 className=\"deck__heading\">Page not found</h2>\r\n                <p className=\"deck__text\">Go back to <Link to=\"/\">/</Link></p>\r\n            </div>\r\n        </section>\r\n    </React.Fragment>\r\n)\r\n\r\nexport default NotFoundPage","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, image, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n            image\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const metaImage = image || site.siteMetadata.image\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `image`,\r\n          content: metaImage,\r\n        },\r\n        {\r\n          property: `og:image`,\r\n          content: metaImage,\r\n        },\r\n        {\r\n          property: `twitter:image`,\r\n          content: metaImage,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSeo.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSeo.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Seo"],"sourceRoot":""}