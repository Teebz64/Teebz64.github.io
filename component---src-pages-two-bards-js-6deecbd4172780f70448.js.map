{"version":3,"sources":["webpack:///./src/pages/two-bards.js","webpack:///./src/components/RevealerWithoutAnimation.js","webpack:///./src/components/Tracker.js","webpack:///./src/components/Caption.js","webpack:///./src/components/Revealer.js"],"names":["TwoBards","React","PureComponent","render","className","pill","heading","subheading","image","alt","styleBlock","modifier","span","autoPlay","loop","muted","width","height","src","Revealer","webp","noFill","shift","this","props","classNames","srcSet","type","Caption","text","ref","fill","accent"],"mappings":"0FAAA,8FAUA,MAAMA,UAAiBC,IAAMC,cAEzBC,SACI,OACI,0BAAMC,UAAU,aACZ,kBAAC,IAAD,MACA,6BAASA,UAAU,yBACf,yBAAKA,UAAU,0DAAf,MAGA,kBAAC,IAAD,CACIC,KAAK,yBACLC,QAAQ,YACRC,WAAW,aAGnB,6BAASH,UAAU,WACf,yBAAKA,UAAU,0DAAf,MAGA,yBAAKA,UAAU,mBACX,kBAAC,IAAD,CACII,MAAM,4CACNC,IAAI,oBACJC,WAAW,YACXC,SAAS,QACTC,KAAK,OAGb,yBAAKR,UAAU,mBACX,yBAAKA,UAAU,6DACX,2BACIA,UAAU,eACVS,UAAU,EACVC,MAAI,EACJC,MAAM,GACNC,MAAM,MACNC,OAAO,MACPC,IAAK,wCAIjB,yBAAKd,UAAU,mBACX,yBAAKA,UAAU,mEACX,2BACIS,UAAU,EACVC,MAAI,EACJC,MAAM,GACNC,MAAM,MACNC,OAAO,MACPC,IAAI,wCACJd,UAAU,sBAU3BJ,a,6ECpEf,MAAMmB,UAAiBlB,IAAMC,cAMzBC,SACI,MAAM,MACFK,EADE,KAEFY,EAFE,IAGFX,EAHE,WAIFC,EAJE,SAKFC,EALE,KAMFC,EANE,OAOFS,EAPE,MAQFC,GACAC,KAAKC,MAET,OACI,4BACIpB,UACIqB,IAAW,0CAA2C,CAClD,CAAE,GAAEf,aAAuBA,EAC3B,CAAE,GAAEA,cAAuBC,KAAaD,GAAcC,EACtD,CAAE,kBAAiBC,KAASA,EAC5B,CAAE,mBAAkBU,KAAUA,EAC9B,oBAAuBD,MAK1BA,GACG,yBACIjB,UAAY,qCACNM,mDACAA,mBAA4BC,2FAK9C,iCACKS,GAAQ,4BAAQM,OAAQN,EAAMO,KAAK,eACpC,4BAAQD,OAAQlB,IAChB,yBACIU,IAAKV,EACLC,IAAKA,EACLL,UAAY,iCACNM,yCACAA,aAAsBC,sD,EA9C1B,CAClBC,KAAM,I,sBAHRO,G,sFA0DSA,O,4DC1DOlB,IAAMC,e,iCCH5B,sCAKA,MAAM0B,UAAgB3B,IAAMC,cAiGxBC,SACI,MAAM,QAAEG,EAAF,KAAWuB,GAASN,KAAKC,MAE/B,OACI,wBACIpB,UAAWqB,IAAW,CAClB,CAAE,SAAQF,KAAKC,MAAMF,SAAUC,KAAKC,MAAMF,SAG9C,yBAAKlB,UAAU,+BACTE,GACE,wBAAIF,UAAU,oBAAoB0B,IAAKP,KAAKjB,SACtCA,GAGV,yBAAKF,UAAU,yBAAyB0B,IAAKP,KAAKQ,OAClD,yBAAK3B,UAAU,2BAA2B0B,IAAKP,KAAKS,SAEhD,yBAAK5B,UAAU,8BAGvB,uBAAGA,UAAU,kBAAmByB,KAMjCD,O,kEC7HQ3B,IAAMC","file":"component---src-pages-two-bards-js-6deecbd4172780f70448.js","sourcesContent":["import React from \"react\"\nimport { ReactBasicScroll } from \"react-basic-scroll\"\nimport { Link } from \"gatsby\"\nimport Masthead from '../components/Masthead'\nimport Revealer from '../components/Revealer'\nimport RevealerWithoutAnimation from '../components/RevealerWithoutAnimation'\nimport Tracker from '../components/Tracker'\nimport Caption from '../components/Caption'\nimport GoBackButton from '../components/GoBackButton'\n\nclass TwoBards extends React.PureComponent {\n\n    render() {\n        return (\n            <main className=\"two-bards\">\n                <GoBackButton />\n                <section className=\"section section--hero\">\n                    <div className=\"section__indicator section__indicator--x-margin-bottom\">\n                        01\n                    </div>\n                    <Masthead\n                        pill='Logo Design â€¢ Branding'\n                        heading='Two Bards'\n                        subheading='Brewery'\n                    />\n                </section>\n                <section className=\"section\">\n                    <div className=\"section__indicator section__indicator--x-margin-bottom\">\n                        02\n                    </div>\n                    <div className=\"case-study__row\">\n                        <RevealerWithoutAnimation\n                            image='/images/two-bards/two-bards-seal--red.svg'\n                            alt='Pattern from Logo'\n                            styleBlock='two-bards'\n                            modifier='first'\n                            span=\"4\"\n                        />\n                    </div>\n                    <div className=\"case-study__row\">\n                        <div className=\"two-bards__video two-bards__sketch-video video shift-half\">\n                            <video\n                                className=\"video__video\"\n                                autoPlay={true}\n                                loop\n                                muted=\"\"\n                                width=\"480\"\n                                height=\"265\"\n                                src={\"/images/two-bards/logo-sketch.mp4\"}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"case-study__row\">\n                        <div className=\"two-bards__video two-bards__refinement-video video shift-1-half\">\n                            <video\n                                autoPlay={true}\n                                loop\n                                muted=\"\"\n                                width=\"480\"\n                                height=\"245\"\n                                src=\"/images/two-bards/logo-refinement.mp4\"\n                                className=\"video__video\"\n                            />\n                        </div>\n                    </div>\n                </section>\n            </main>\n        )\n    }\n}\n\nexport default TwoBards","import React from \"react\"\nimport classNames from 'classnames'\n\nclass Revealer extends React.PureComponent {\n\n    static defaultProps = {\n        span: 3\n    }\n\n    render() {\n        const {\n            image,\n            webp,\n            alt,\n            styleBlock,\n            modifier,\n            span,\n            noFill,\n            shift\n        } = this.props\n\n        return (\n            <figure\n                className={\n                    classNames('revealer__figure revealer--no-animation', {\n                        [`${styleBlock}__figure`]: styleBlock,\n                        [`${styleBlock}__figure--${modifier}`]: styleBlock && modifier,\n                        [`revealer--span-${span}`]: span,\n                        [`revealer--shift-${shift}`]: shift,\n                        [`revealer--no-fill`]: noFill\n                    })\n                }\n            >\n                {\n                    !noFill &&\n                        <div\n                            className={`\n                                ${styleBlock}__figure-fill\n                                ${styleBlock}__figure-fill--${modifier}\n                                revealer__figure-fill\n                            `}\n                        />\n                }\n                <picture>\n                    {webp && <source srcSet={webp} type=\"image/webp\" />}\n                    <source srcSet={image} />\n                    <img\n                        src={image}\n                        alt={alt}\n                        className={`\n                            ${styleBlock}__image\n                            ${styleBlock}__image--${modifier}\n                            revealer__image`\n                        }\n                    />\n                </picture>\n            </figure>\n        )\n    }\n}\n\nexport default Revealer","import React from \"react\"\nimport { ReactBasicScroll } from \"react-basic-scroll\"\n\nclass Tracker extends React.PureComponent {\n\n    state = { hasEntered: false }\n\n    scrollConfig = {\n        from: 'bottom-bottom',\n        to: 'top-middle',\n        timing: 'expoOut',\n        direct: true,\n        inside: () => this.onEnter(),\n    }\n\n    onEnter = () => {\n        if (this.state.hasEntered) { return }\n        this.setState({ hasEntered: true })\n    }\n\n    render() {\n        return (\n            <ReactBasicScroll config={this.scrollConfig}>\n                <div>\n                    {React.cloneElement(\n                        this.props.children,\n                        { enter: this.state.hasEntered }\n                    )}\n                </div>\n            </ReactBasicScroll>\n        )\n    }\n}\n\nexport default Tracker","import React from \"react\"\n// import anime from 'animejs/lib/anime.es.js'\n// import TextScramble from './TextScrambler'\nimport classNames from \"classnames\"\n\nclass Caption extends React.PureComponent {\n\n    // state = {\n    //     enter: false,\n    //     hasEntered: false\n    // }\n\n    // scrollConfig = {\n    //     from: 'bottom-bottom',\n    //     to: 'top-top',\n    //     timing: 'expoOut',\n    //     direct: true,\n    //     inside: () => this.onEnter(),\n    //     outside: () => this.onExit(),\n    //     // props: {\n    //     //     [`--heading-opacity`]: {\n    //     //         from: 0,\n    //     //         to: .99\n    //     //     },\n    //     //     [`--accent-ty`]: {\n    //     //         from: '-24px',\n    //     //         to: '0px'\n    //     //     },\n    //     // }\n    // }\n\n    // heading = React.createRef()\n    // fill = React.createRef()\n    // accent = React.createRef()\n\n    // componentDidMount = () => {\n    //     this.scramble = new TextScramble(this.heading.current)\n    // }\n\n    // onEnter = () => {\n    //     let enter = false\n    //     let hasEntered = false\n\n    //     if (!this.state.enter) {\n    //         this.scramble.play()\n\n    //         anime({\n    //             easing: 'easeOutExpo',\n    //             targets: this.accent.current,\n    //             translateY: [-24, 0],\n    //             opacity: [0, .99],\n    //             duration: 750\n    //         })\n\n    //         anime({\n    //             easing: 'easeOutExpo',\n    //             targets: this.fill.current,\n    //             scaleX: [0, 1],\n    //             opacity: [0, .99],\n    //             duration: 750\n    //         })\n\n    //         enter = true\n    //     } else {\n    //         return\n    //     }\n\n    //     this.setState({ enter, hasEntered })\n    // }\n\n    // onExit = () => {\n    //     if (!this.state.enter) { return }\n    //     this.scramble.play()\n\n    //     anime({\n    //         easing: 'easeOutExpo',\n    //         targets: this.accent.current,\n    //         translateY: [0, 24],\n    //         opacity: [.99, 0],\n    //         duration: 750\n    //     })\n\n    //     anime({\n    //         easing: 'easeOutExpo',\n    //         targets: this.fill.current,\n    //         scaleX: [1, 0],\n    //         opacity: [.99, 0],\n    //         duration: 750\n    //     })\n\n    //     this.setState({ enter: false })\n    // }\n\n    // componentDidUpdate(prevProps, prevState) {\n    //     if (\n    //         prevProps.enter === false\n    //         && this.props.enter === true\n    //     ) {\n    //         this.onEnter()\n    //     }\n    // }\n\n    render() {\n        const { heading, text } = this.props\n\n        return (\n            <li\n                className={classNames({\n                    [`shift-${this.props.shift}`]: this.props.shift\n                })}\n            >\n                <div className=\"callouts__heading-container\">\n                    { heading &&\n                        <h6 className=\"callouts__heading\" ref={this.heading}>\n                            { heading }\n                        </h6>\n                    }\n                    <div className=\"callouts__heading-fill\" ref={this.fill} />\n                    <div className=\"callouts__heading-accent\" ref={this.accent} />\n                    {/*<ReactBasicScroll config={this.scrollConfig}>*/}\n                        <div className=\"callouts__heading-anchor\" />\n                    {/*</ReactBasicScroll>*/}\n                </div>\n                <p className=\"callouts__text\">{ text }</p>\n            </li>\n        )\n    }\n}\n\nexport default Caption","import React from \"react\"\nimport anime from 'animejs/lib/anime.es.js'\nimport classNames from 'classnames'\n\nclass Revealer extends React.PureComponent {\n\n    figure = React.createRef()\n    figureFill = React.createRef()\n    image = React.createRef()\n\n    onEnter = () => {\n        anime({\n            easing: 'easeOutExpo',\n            targets: this.figure.current,\n            scaleX: [0, 1],\n            opacity: .99,\n            duration: 750\n        })\n\n        anime({\n            easing: 'easeInOutExpo',\n            targets: this.figureFill.current,\n            scaleX: [0, 1],\n            duration: 750,\n            delay: 250,\n        })\n\n        anime({\n            easing: 'easeInOutExpo',\n            targets: this.image,\n            opacity: [0, 0],\n            duration: 500,\n            delay: 1250\n        })\n\n        console.log(this.image)\n    }\n\n    componentDidUpdate(prevProps) {\n        if (\n            prevProps.enter === false\n            && this.props.enter === true\n        ) {\n            this.onEnter()\n        }\n    }\n\n    render() {\n        const {\n            image,\n            alt,\n            styleBlock,\n            modifier,\n            span\n        } = this.props\n\n        return (\n            <figure\n                className={\n                    classNames(\n                        `\n                            ${styleBlock}__figure\n                            ${styleBlock}__figure--${modifier}\n                            revealer__figure\n                        `, {\n                            [`revealer__figure--span-${span}`]: span\n                        }\n                    )\n                }\n                ref={this.figure}\n            >\n                <div\n                    className={`\n                        ${styleBlock}__figure-fill\n                        ${styleBlock}__figure-fill--${modifier}\n                        revealer__figure-fill\n                    `}\n                    ref={this.figureFill}\n                />\n                <div\n                    ref={this.image}\n                    className={`\n                        ${styleBlock}__thumbnail\n                        ${styleBlock}__thumbnail--${modifier}\n                        revealer__thumbnail\n                    `}\n                >\n                    <img\n                        src={image}\n                        alt={alt}\n                        className={`\n                            ${styleBlock}__image\n                            ${styleBlock}__image--${modifier}\n                            revealer__image`\n                        }\n                    />\n                </div>\n            </figure>\n        )\n    }\n}\n\nexport default Revealer"],"sourceRoot":""}