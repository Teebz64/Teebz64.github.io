{"version":3,"sources":["webpack:///./src/pages/knowledge-exchange.js","webpack:///./node_modules/classnames/index.js","webpack:///./src/components/RevealerWithoutAnimation.js","webpack:///./src/components/Tracker.js","webpack:///./src/components/Caption.js","webpack:///./src/components/Revealer.js"],"names":["KnowledgeExchange","React","PureComponent","render","styleBlock","this","className","heading","subheading","pill","text","image","alt","modifier","span","noFill","shift","webp","map","item","i","key","data-content","srcSet","type","src","hasOwn","hasOwnProperty","classNames","classes","arguments","length","arg","argType","push","Array","isArray","inner","apply","call","join","module","exports","Revealer","props","Caption","ref","fill","accent"],"mappings":"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","file":"component---src-pages-knowledge-exchange-js-f85624bfb4c347d2712f.js","sourcesContent":["import React from \"react\"\nimport { ReactBasicScroll } from \"react-basic-scroll\"\nimport { Link } from \"gatsby\"\nimport Masthead from '../components/Masthead'\nimport Revealer from '../components/Revealer'\nimport RevealerWithoutAnimation from '../components/RevealerWithoutAnimation'\nimport Tracker from '../components/Tracker'\nimport Caption from '../components/Caption'\nimport GoBackButton from '../components/GoBackButton'\n\nclass KnowledgeExchange extends React.PureComponent {\n\n    styleBlock = 'knowledge-exchange'\n\n    render() {\n        const { styleBlock } = this\n\n        return (\n            <main className=\"knowledge-exchange\">\n                <GoBackButton />\n                <section className=\"section section--hero\">\n                    <div className=\"section__indicator section__indicator--x-margin-bottom\">\n                        01\n                    </div>\n                    <Masthead\n                        heading='Humana'\n                        subheading='Knowledge Exchange'\n                        pill='Architecture â€¢ Design â€¢ Direction'\n                    />\n                    <ul className=\"callouts callouts--x-margin-bottom callouts--inline\">\n                        <Caption\n                            heading=\"about\"\n                            text=\"Two Bards Brewery is a bar and brewery located in Bardstown, KY ðŸ™„\"\n                        />\n                        <Caption\n                            heading=\"role\"\n                            text=\"Designer\"\n                        />\n                    </ul>\n                </section>\n                <section className=\"section\">\n                    <div className=\"section__indicator section__indicator--x-margin-bottom\">\n                        02\n                    </div>\n                    <div className=\"case-study__row\">\n                        <RevealerWithoutAnimation\n                            image='/images/knowledge-exchange/feed-in-laptop.png'\n                            //webp='/images/knowledge-exchange/feed-in-laptop.webp'\n                            alt='Laptop Mockup'\n                            modifier='first'\n                            span=\"4\"\n                            noFill\n                            styleBlock={styleBlock}\n                        />\n                        <ul className=\"callouts callouts--caption\">\n                            <Caption\n                                text=\"The main newsfeed as it appears on the home screen.\"\n                                shift=\"1\"\n                            />\n                        </ul>\n                    </div>\n                    <div className=\"case-study__row case-study__row--underlap knowledge-exchange__row--second\">\n                        <RevealerWithoutAnimation\n                            image='/images/knowledge-exchange/manage-topics.png'\n                            webp='/images/knowledge-exchange/manage-topics.webp'\n                            alt='Laptop Mockup'\n                            modifier='second'\n                            span=\"3\"\n                            noFill\n                            styleBlock={styleBlock}\n                        />\n                        <ul className=\"callouts callouts--caption\">\n                            <Caption\n                                text=\"The main newsfeed as it appears on the home screen.\"\n                                shift=\"0\"\n                            />\n                        </ul>\n                    </div>\n                    <div className=\"case-study__row case-study__row--overlap\">\n                        <RevealerWithoutAnimation\n                            image='/images/knowledge-exchange/sign-up-topics.png'\n                            webp='/images/knowledge-exchange/sign-up-topics.webp'\n                            alt='Laptop Mockup'\n                            modifier='second'\n                            span=\"2\"\n                            shift=\"2\"\n                            styleBlock={styleBlock}\n                            noFill\n                        />\n                        <ul className=\"callouts callouts--caption\">\n                            <Caption\n                                text=\"The main newsfeed as it appears on the home screen.\"\n                                shift=\"2\"\n                            />\n                        </ul>\n                    </div>\n                    <div className=\"case-study__row knowledge-exchange__flex-row knowledge-exchange__flex-row--styles\">\n                        <div className=\"flex-left\">\n                            <ul className=\"stacked-tiles\">\n                                { ['linkedin', 'twitter', 'facebook'].map((item, i) =>\n                                    <li key={i} data-content={item}>\n                                        <picture>\n                                            <source srcSet={`/images/knowledge-exchange/${item}-style.webp`} type=\"image/webp\" />\n                                            <source srcSet={`/images/knowledge-exchange/${item}-style.png`} type=\"image/png\" />\n                                            <img src={`/images/knowledge-exchange/${item}-style.png`} alt={`${item} style`} />\n                                        </picture>\n                                    </li>\n                                )}\n                            </ul>\n                            <ul className=\"callouts callouts--caption\">\n                                <Caption\n                                    text=\"Upon examining popular content aggregation sites I noticed that all 3 of the top contenders, Facebook, Twitter, and LinkedIn, all followed a similar grouping pattern. Notice how, even in dark mode, that the foreground elements are a hair lighter than their backing fields.\"\n                                />\n                            </ul>\n                        </div>\n                        <div className=\"flex-right\">\n                            <RevealerWithoutAnimation\n                                image='/images/knowledge-exchange/style-example.png'\n                                webp='/images/knowledge-exchange/style-example.webp'\n                                alt='Laptop Mockup'\n                                span={4}\n                                styleBlock={styleBlock}\n                                noFill\n                            />\n                        </div>\n                    </div>\n                    <div className=\"case-study__row\">\n                        <RevealerWithoutAnimation\n                            image='/images/knowledge-exchange/profile.png'\n                            webp='/images/knowledge-exchange/profile.webp'\n                            alt='Laptop Mockup'\n                            span=\"2\"\n                            styleBlock={styleBlock}\n                            noFill\n                        />\n                        <ul className=\"span-2 knowledge-exchange__suggestion-tiles\">\n                            <li>\n                                <picture>\n                                    <source srcSet={`/images/knowledge-exchange/suggested-articles.webp`} type=\"image/webp\" />\n                                    <source srcSet={`/images/knowledge-exchange/suggested-articles.png`} type=\"image/png\" />\n                                    <img src={`/images/knowledge-exchange/suggested-articles.png`} alt={`Suggested articles component`} />\n                                </picture>\n                            </li>\n                            <li>\n                                <picture>\n                                    <source srcSet={`/images/knowledge-exchange/suggested-experts.webp`} type=\"image/webp\" />\n                                    <source srcSet={`/images/knowledge-exchange/suggested-experts.png`} type=\"image/png\" />\n                                    <img src={`/images/knowledge-exchange/suggested-experts.png`} alt={`Suggested experts component`} />\n                                </picture>\n                            </li>\n                        </ul>\n                    </div>\n                </section>\n            </main>\n        )\n    }\n}\n\nexport default KnowledgeExchange","require(\"core-js/modules/es6.array.is-array\");\n\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import React from \"react\"\nimport classNames from 'classnames'\n\nclass Revealer extends React.PureComponent {\n\n    static defaultProps = {\n        span: 3\n    }\n\n    render() {\n        const {\n            image,\n            webp,\n            alt,\n            styleBlock,\n            modifier,\n            span,\n            noFill,\n            shift\n        } = this.props\n\n        return (\n            <figure\n                className={\n                    classNames('revealer__figure revealer--no-animation', {\n                        [`${styleBlock}__figure`]: styleBlock,\n                        [`${styleBlock}__figure--${modifier}`]: styleBlock && modifier,\n                        [`revealer--span-${span}`]: span,\n                        [`revealer--shift-${shift}`]: shift,\n                        [`revealer--no-fill`]: noFill\n                    })\n                }\n            >\n                {\n                    !noFill &&\n                        <div\n                            className={`\n                                ${styleBlock}__figure-fill\n                                ${styleBlock}__figure-fill--${modifier}\n                                revealer__figure-fill\n                            `}\n                        />\n                }\n                <picture>\n                    {webp && <source srcSet={webp} type=\"image/webp\" />}\n                    <source srcSet={image} />\n                    <img\n                        src={image}\n                        alt={alt}\n                        className={`\n                            ${styleBlock}__image\n                            ${styleBlock}__image--${modifier}\n                            revealer__image`\n                        }\n                    />\n                </picture>\n            </figure>\n        )\n    }\n}\n\nexport default Revealer","import React from \"react\"\nimport { ReactBasicScroll } from \"react-basic-scroll\"\n\nclass Tracker extends React.PureComponent {\n\n    state = { hasEntered: false }\n\n    scrollConfig = {\n        from: 'bottom-bottom',\n        to: 'top-middle',\n        timing: 'expoOut',\n        direct: true,\n        inside: () => this.onEnter(),\n    }\n\n    onEnter = () => {\n        if (this.state.hasEntered) { return }\n        this.setState({ hasEntered: true })\n    }\n\n    render() {\n        return (\n            <ReactBasicScroll config={this.scrollConfig}>\n                <div>\n                    {React.cloneElement(\n                        this.props.children,\n                        { enter: this.state.hasEntered }\n                    )}\n                </div>\n            </ReactBasicScroll>\n        )\n    }\n}\n\nexport default Tracker","import React from \"react\"\n// import anime from 'animejs/lib/anime.es.js'\n// import TextScramble from './TextScrambler'\nimport classNames from \"classnames\"\n\nclass Caption extends React.PureComponent {\n\n    // state = {\n    //     enter: false,\n    //     hasEntered: false\n    // }\n\n    // scrollConfig = {\n    //     from: 'bottom-bottom',\n    //     to: 'top-top',\n    //     timing: 'expoOut',\n    //     direct: true,\n    //     inside: () => this.onEnter(),\n    //     outside: () => this.onExit(),\n    //     // props: {\n    //     //     [`--heading-opacity`]: {\n    //     //         from: 0,\n    //     //         to: .99\n    //     //     },\n    //     //     [`--accent-ty`]: {\n    //     //         from: '-24px',\n    //     //         to: '0px'\n    //     //     },\n    //     // }\n    // }\n\n    // heading = React.createRef()\n    // fill = React.createRef()\n    // accent = React.createRef()\n\n    // componentDidMount = () => {\n    //     this.scramble = new TextScramble(this.heading.current)\n    // }\n\n    // onEnter = () => {\n    //     let enter = false\n    //     let hasEntered = false\n\n    //     if (!this.state.enter) {\n    //         this.scramble.play()\n\n    //         anime({\n    //             easing: 'easeOutExpo',\n    //             targets: this.accent.current,\n    //             translateY: [-24, 0],\n    //             opacity: [0, .99],\n    //             duration: 750\n    //         })\n\n    //         anime({\n    //             easing: 'easeOutExpo',\n    //             targets: this.fill.current,\n    //             scaleX: [0, 1],\n    //             opacity: [0, .99],\n    //             duration: 750\n    //         })\n\n    //         enter = true\n    //     } else {\n    //         return\n    //     }\n\n    //     this.setState({ enter, hasEntered })\n    // }\n\n    // onExit = () => {\n    //     if (!this.state.enter) { return }\n    //     this.scramble.play()\n\n    //     anime({\n    //         easing: 'easeOutExpo',\n    //         targets: this.accent.current,\n    //         translateY: [0, 24],\n    //         opacity: [.99, 0],\n    //         duration: 750\n    //     })\n\n    //     anime({\n    //         easing: 'easeOutExpo',\n    //         targets: this.fill.current,\n    //         scaleX: [1, 0],\n    //         opacity: [.99, 0],\n    //         duration: 750\n    //     })\n\n    //     this.setState({ enter: false })\n    // }\n\n    // componentDidUpdate(prevProps, prevState) {\n    //     if (\n    //         prevProps.enter === false\n    //         && this.props.enter === true\n    //     ) {\n    //         this.onEnter()\n    //     }\n    // }\n\n    render() {\n        const { heading, text } = this.props\n\n        return (\n            <li\n                className={classNames({\n                    [`shift-${this.props.shift}`]: this.props.shift\n                })}\n            >\n                <div className=\"callouts__heading-container\">\n                    { heading &&\n                        <h6 className=\"callouts__heading\" ref={this.heading}>\n                            { heading }\n                        </h6>\n                    }\n                    <div className=\"callouts__heading-fill\" ref={this.fill} />\n                    <div className=\"callouts__heading-accent\" ref={this.accent} />\n                    {/*<ReactBasicScroll config={this.scrollConfig}>*/}\n                        <div className=\"callouts__heading-anchor\" />\n                    {/*</ReactBasicScroll>*/}\n                </div>\n                <p className=\"callouts__text\">{ text }</p>\n            </li>\n        )\n    }\n}\n\nexport default Caption","import React from \"react\"\nimport anime from 'animejs/lib/anime.es.js'\nimport classNames from 'classnames'\n\nclass Revealer extends React.PureComponent {\n\n    figure = React.createRef()\n    figureFill = React.createRef()\n    image = React.createRef()\n\n    onEnter = () => {\n        anime({\n            easing: 'easeOutExpo',\n            targets: this.figure.current,\n            scaleX: [0, 1],\n            opacity: .99,\n            duration: 750\n        })\n\n        anime({\n            easing: 'easeInOutExpo',\n            targets: this.figureFill.current,\n            scaleX: [0, 1],\n            duration: 750,\n            delay: 250,\n        })\n\n        anime({\n            easing: 'easeInOutExpo',\n            targets: this.image,\n            opacity: [0, 0],\n            duration: 500,\n            delay: 1250\n        })\n\n        console.log(this.image)\n    }\n\n    componentDidUpdate(prevProps) {\n        if (\n            prevProps.enter === false\n            && this.props.enter === true\n        ) {\n            this.onEnter()\n        }\n    }\n\n    render() {\n        const {\n            image,\n            alt,\n            styleBlock,\n            modifier,\n            span\n        } = this.props\n\n        return (\n            <figure\n                className={\n                    classNames(\n                        `\n                            ${styleBlock}__figure\n                            ${styleBlock}__figure--${modifier}\n                            revealer__figure\n                        `, {\n                            [`revealer__figure--span-${span}`]: span\n                        }\n                    )\n                }\n                ref={this.figure}\n            >\n                <div\n                    className={`\n                        ${styleBlock}__figure-fill\n                        ${styleBlock}__figure-fill--${modifier}\n                        revealer__figure-fill\n                    `}\n                    ref={this.figureFill}\n                />\n                <div\n                    ref={this.image}\n                    className={`\n                        ${styleBlock}__thumbnail\n                        ${styleBlock}__thumbnail--${modifier}\n                        revealer__thumbnail\n                    `}\n                >\n                    <img\n                        src={image}\n                        alt={alt}\n                        className={`\n                            ${styleBlock}__image\n                            ${styleBlock}__image--${modifier}\n                            revealer__image`\n                        }\n                    />\n                </div>\n            </figure>\n        )\n    }\n}\n\nexport default Revealer"],"sourceRoot":""}